// Generated by dojo-bindgen on Fri, 5 Apr 2024 08:03:07 +0000. Do not modify this file manually.
using System;
using System.Threading.Tasks;
using Dojo;
using Dojo.Starknet;
using UnityEngine;
using dojo_bindings;

// System definitions for `zklash::systems::account::account` contract
public class AccountSystem : MonoBehaviour
{
    public GameManagerData data;

    // Call the `dojo_resource` system with the specified Account and calldata
    // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
    public async Task<FieldElement> DojoResource(Account account)
    {
        return await account.ExecuteRaw(new dojo.Call[] {
            new dojo.Call{
                to = data.accountContractAddress,
                selector = "dojo_resource",
                calldata = new dojo.FieldElement[] {

                }
            }
        });
    }



    // Call the `create` system with the specified Account and calldata
    // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
    public async Task<FieldElement> Create(Account account, string world, string name)
    {
        return await account.ExecuteRaw(new dojo.Call[] {
            new dojo.Call{
                to = data.accountContractAddress,
                selector = "create",
                calldata = new dojo.FieldElement[] {
                    new FieldElement(world).Inner,
                    new FieldElement(name).Inner
                }
            }
        });
    }

    // Call the `spawn` system with the specified Account and calldata
    // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
    public async Task<FieldElement> Spawn(Account account, string world)
    {
        return await account.ExecuteRaw(new dojo.Call[] {
            new dojo.Call{
                to = data.accountContractAddress,
                selector = "spawn",
                calldata = new dojo.FieldElement[] {
                    new FieldElement(world).Inner
                }
            }
        });
    }

}
